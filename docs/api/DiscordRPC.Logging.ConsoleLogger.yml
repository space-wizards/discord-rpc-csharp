### YamlMime:ManagedReference
items:
- uid: DiscordRPC.Logging.ConsoleLogger
  commentId: T:DiscordRPC.Logging.ConsoleLogger
  id: ConsoleLogger
  parent: DiscordRPC.Logging
  children:
  - DiscordRPC.Logging.ConsoleLogger.#ctor
  - DiscordRPC.Logging.ConsoleLogger.#ctor(DiscordRPC.Logging.LogLevel,System.Boolean)
  - DiscordRPC.Logging.ConsoleLogger.Colored
  - DiscordRPC.Logging.ConsoleLogger.Coloured
  - DiscordRPC.Logging.ConsoleLogger.Error(System.String,System.Object[])
  - DiscordRPC.Logging.ConsoleLogger.Info(System.String,System.Object[])
  - DiscordRPC.Logging.ConsoleLogger.Level
  - DiscordRPC.Logging.ConsoleLogger.Trace(System.String,System.Object[])
  - DiscordRPC.Logging.ConsoleLogger.Warning(System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: ConsoleLogger
  nameWithType: ConsoleLogger
  fullName: DiscordRPC.Logging.ConsoleLogger
  type: Class
  source:
    id: ConsoleLogger
    path: ''
    startLine: 3359
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nLogs the outputs to the console using <xref href=\"System.Console.WriteLine\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class ConsoleLogger : ILogger'
    content.vb: >-
      Public Class ConsoleLogger
          Implements ILogger
  inheritance:
  - System.Object
  implements:
  - DiscordRPC.Logging.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DiscordRPC.Logging.ConsoleLogger.Level
  commentId: P:DiscordRPC.Logging.ConsoleLogger.Level
  id: Level
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: ConsoleLogger.Level
  fullName: DiscordRPC.Logging.ConsoleLogger.Level
  type: Property
  source:
    id: Level
    path: ''
    startLine: 3364
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nThe level of logging to apply to this logger.\n"
  example: []
  syntax:
    content: public LogLevel Level { get; set; }
    parameters: []
    return:
      type: DiscordRPC.Logging.LogLevel
    content.vb: Public Property Level As LogLevel
  overload: DiscordRPC.Logging.ConsoleLogger.Level*
  implements:
  - DiscordRPC.Logging.ILogger.Level
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DiscordRPC.Logging.ConsoleLogger.Coloured
  commentId: P:DiscordRPC.Logging.ConsoleLogger.Coloured
  id: Coloured
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Coloured
  nameWithType: ConsoleLogger.Coloured
  fullName: DiscordRPC.Logging.ConsoleLogger.Coloured
  type: Property
  source:
    id: Coloured
    path: ''
    startLine: 3369
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nShould the output be coloured?\n"
  example: []
  syntax:
    content: public bool Coloured { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Coloured As Boolean
  overload: DiscordRPC.Logging.ConsoleLogger.Coloured*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DiscordRPC.Logging.ConsoleLogger.Colored
  commentId: P:DiscordRPC.Logging.ConsoleLogger.Colored
  id: Colored
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Colored
  nameWithType: ConsoleLogger.Colored
  fullName: DiscordRPC.Logging.ConsoleLogger.Colored
  type: Property
  source:
    id: Colored
    path: ''
    startLine: 3374
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nA alias too <xref href=\"DiscordRPC.Logging.ConsoleLogger.Coloured\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool Colored { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Colored As Boolean
  overload: DiscordRPC.Logging.ConsoleLogger.Colored*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DiscordRPC.Logging.ConsoleLogger.#ctor
  commentId: M:DiscordRPC.Logging.ConsoleLogger.#ctor
  id: '#ctor'
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: ConsoleLogger()
  nameWithType: ConsoleLogger.ConsoleLogger()
  fullName: DiscordRPC.Logging.ConsoleLogger.ConsoleLogger()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3379
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nCreates a new instance of a Console Logger.\n"
  example: []
  syntax:
    content: public ConsoleLogger()
    content.vb: Public Sub New
  overload: DiscordRPC.Logging.ConsoleLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DiscordRPC.Logging.ConsoleLogger.#ctor(DiscordRPC.Logging.LogLevel,System.Boolean)
  commentId: M:DiscordRPC.Logging.ConsoleLogger.#ctor(DiscordRPC.Logging.LogLevel,System.Boolean)
  id: '#ctor(DiscordRPC.Logging.LogLevel,System.Boolean)'
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: ConsoleLogger(LogLevel, Boolean)
  nameWithType: ConsoleLogger.ConsoleLogger(LogLevel, Boolean)
  fullName: DiscordRPC.Logging.ConsoleLogger.ConsoleLogger(DiscordRPC.Logging.LogLevel, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3390
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nCreates a new instance of a Console Logger with a set log level\n"
  example: []
  syntax:
    content: public ConsoleLogger(LogLevel level, bool coloured = false)
    parameters:
    - id: level
      type: DiscordRPC.Logging.LogLevel
      description: ''
    - id: coloured
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(level As LogLevel, coloured As Boolean = False)
  overload: DiscordRPC.Logging.ConsoleLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DiscordRPC.Logging.ConsoleLogger.Trace(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ConsoleLogger.Trace(System.String,System.Object[])
  id: Trace(System.String,System.Object[])
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Trace(String, Object[])
  nameWithType: ConsoleLogger.Trace(String, Object[])
  fullName: DiscordRPC.Logging.ConsoleLogger.Trace(System.String, System.Object[])
  type: Method
  source:
    id: Trace
    path: ''
    startLine: 3401
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nInformative log messages\n"
  example: []
  syntax:
    content: public void Trace(string message, params object[] args)
    parameters:
    - id: message
      type: System.String
      description: ''
    - id: args
      type: System.Object[]
      description: ''
    content.vb: Public Sub Trace(message As String, ParamArray args As Object())
  overload: DiscordRPC.Logging.ConsoleLogger.Trace*
  implements:
  - DiscordRPC.Logging.ILogger.Trace(System.String,System.Object[])
  nameWithType.vb: ConsoleLogger.Trace(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DiscordRPC.Logging.ConsoleLogger.Trace(System.String, System.Object())
  name.vb: Trace(String, Object())
- uid: DiscordRPC.Logging.ConsoleLogger.Info(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ConsoleLogger.Info(System.String,System.Object[])
  id: Info(System.String,System.Object[])
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Info(String, Object[])
  nameWithType: ConsoleLogger.Info(String, Object[])
  fullName: DiscordRPC.Logging.ConsoleLogger.Info(System.String, System.Object[])
  type: Method
  source:
    id: Info
    path: ''
    startLine: 3414
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nInformative log messages\n"
  example: []
  syntax:
    content: public void Info(string message, params object[] args)
    parameters:
    - id: message
      type: System.String
      description: ''
    - id: args
      type: System.Object[]
      description: ''
    content.vb: Public Sub Info(message As String, ParamArray args As Object())
  overload: DiscordRPC.Logging.ConsoleLogger.Info*
  implements:
  - DiscordRPC.Logging.ILogger.Info(System.String,System.Object[])
  nameWithType.vb: ConsoleLogger.Info(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DiscordRPC.Logging.ConsoleLogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
- uid: DiscordRPC.Logging.ConsoleLogger.Warning(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ConsoleLogger.Warning(System.String,System.Object[])
  id: Warning(System.String,System.Object[])
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Warning(String, Object[])
  nameWithType: ConsoleLogger.Warning(String, Object[])
  fullName: DiscordRPC.Logging.ConsoleLogger.Warning(System.String, System.Object[])
  type: Method
  source:
    id: Warning
    path: ''
    startLine: 3427
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nWarning log messages\n"
  example: []
  syntax:
    content: public void Warning(string message, params object[] args)
    parameters:
    - id: message
      type: System.String
      description: ''
    - id: args
      type: System.Object[]
      description: ''
    content.vb: Public Sub Warning(message As String, ParamArray args As Object())
  overload: DiscordRPC.Logging.ConsoleLogger.Warning*
  implements:
  - DiscordRPC.Logging.ILogger.Warning(System.String,System.Object[])
  nameWithType.vb: ConsoleLogger.Warning(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DiscordRPC.Logging.ConsoleLogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
- uid: DiscordRPC.Logging.ConsoleLogger.Error(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ConsoleLogger.Error(System.String,System.Object[])
  id: Error(System.String,System.Object[])
  parent: DiscordRPC.Logging.ConsoleLogger
  langs:
  - csharp
  - vb
  name: Error(String, Object[])
  nameWithType: ConsoleLogger.Error(String, Object[])
  fullName: DiscordRPC.Logging.ConsoleLogger.Error(System.String, System.Object[])
  type: Method
  source:
    id: Error
    path: ''
    startLine: 3440
  assemblies:
  - cs.temp.dll
  namespace: DiscordRPC.Logging
  summary: "\nError log messsages\n"
  example: []
  syntax:
    content: public void Error(string message, params object[] args)
    parameters:
    - id: message
      type: System.String
      description: ''
    - id: args
      type: System.Object[]
      description: ''
    content.vb: Public Sub Error(message As String, ParamArray args As Object())
  overload: DiscordRPC.Logging.ConsoleLogger.Error*
  implements:
  - DiscordRPC.Logging.ILogger.Error(System.String,System.Object[])
  nameWithType.vb: ConsoleLogger.Error(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DiscordRPC.Logging.ConsoleLogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
references:
- uid: System.Console.WriteLine
  commentId: M:System.Console.WriteLine
  isExternal: true
- uid: DiscordRPC.Logging
  commentId: N:DiscordRPC.Logging
  name: DiscordRPC.Logging
  nameWithType: DiscordRPC.Logging
  fullName: DiscordRPC.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DiscordRPC.Logging.ILogger
  commentId: T:DiscordRPC.Logging.ILogger
  parent: DiscordRPC.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: DiscordRPC.Logging.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DiscordRPC.Logging.ConsoleLogger.Level*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Level
  name: Level
  nameWithType: ConsoleLogger.Level
  fullName: DiscordRPC.Logging.ConsoleLogger.Level
- uid: DiscordRPC.Logging.ILogger.Level
  commentId: P:DiscordRPC.Logging.ILogger.Level
  parent: DiscordRPC.Logging.ILogger
  name: Level
  nameWithType: ILogger.Level
  fullName: DiscordRPC.Logging.ILogger.Level
- uid: DiscordRPC.Logging.LogLevel
  commentId: T:DiscordRPC.Logging.LogLevel
  parent: DiscordRPC.Logging
  name: LogLevel
  nameWithType: LogLevel
  fullName: DiscordRPC.Logging.LogLevel
- uid: DiscordRPC.Logging.ConsoleLogger.Coloured*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Coloured
  name: Coloured
  nameWithType: ConsoleLogger.Coloured
  fullName: DiscordRPC.Logging.ConsoleLogger.Coloured
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DiscordRPC.Logging.ConsoleLogger.Coloured
  commentId: P:DiscordRPC.Logging.ConsoleLogger.Coloured
  isExternal: true
- uid: DiscordRPC.Logging.ConsoleLogger.Colored*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Colored
  name: Colored
  nameWithType: ConsoleLogger.Colored
  fullName: DiscordRPC.Logging.ConsoleLogger.Colored
- uid: DiscordRPC.Logging.ConsoleLogger.#ctor*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.#ctor
  name: ConsoleLogger
  nameWithType: ConsoleLogger.ConsoleLogger
  fullName: DiscordRPC.Logging.ConsoleLogger.ConsoleLogger
- uid: DiscordRPC.Logging.ConsoleLogger.Trace*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Trace
  name: Trace
  nameWithType: ConsoleLogger.Trace
  fullName: DiscordRPC.Logging.ConsoleLogger.Trace
- uid: DiscordRPC.Logging.ILogger.Trace(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ILogger.Trace(System.String,System.Object[])
  parent: DiscordRPC.Logging.ILogger
  isExternal: true
  name: Trace(String, Object[])
  nameWithType: ILogger.Trace(String, Object[])
  fullName: DiscordRPC.Logging.ILogger.Trace(System.String, System.Object[])
  nameWithType.vb: ILogger.Trace(String, Object())
  fullName.vb: DiscordRPC.Logging.ILogger.Trace(System.String, System.Object())
  name.vb: Trace(String, Object())
  spec.csharp:
  - uid: DiscordRPC.Logging.ILogger.Trace(System.String,System.Object[])
    name: Trace
    nameWithType: ILogger.Trace
    fullName: DiscordRPC.Logging.ILogger.Trace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordRPC.Logging.ILogger.Trace(System.String,System.Object[])
    name: Trace
    nameWithType: ILogger.Trace
    fullName: DiscordRPC.Logging.ILogger.Trace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DiscordRPC.Logging.ConsoleLogger.Info*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Info
  name: Info
  nameWithType: ConsoleLogger.Info
  fullName: DiscordRPC.Logging.ConsoleLogger.Info
- uid: DiscordRPC.Logging.ILogger.Info(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ILogger.Info(System.String,System.Object[])
  parent: DiscordRPC.Logging.ILogger
  isExternal: true
  name: Info(String, Object[])
  nameWithType: ILogger.Info(String, Object[])
  fullName: DiscordRPC.Logging.ILogger.Info(System.String, System.Object[])
  nameWithType.vb: ILogger.Info(String, Object())
  fullName.vb: DiscordRPC.Logging.ILogger.Info(System.String, System.Object())
  name.vb: Info(String, Object())
  spec.csharp:
  - uid: DiscordRPC.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: DiscordRPC.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordRPC.Logging.ILogger.Info(System.String,System.Object[])
    name: Info
    nameWithType: ILogger.Info
    fullName: DiscordRPC.Logging.ILogger.Info
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DiscordRPC.Logging.ConsoleLogger.Warning*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Warning
  name: Warning
  nameWithType: ConsoleLogger.Warning
  fullName: DiscordRPC.Logging.ConsoleLogger.Warning
- uid: DiscordRPC.Logging.ILogger.Warning(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ILogger.Warning(System.String,System.Object[])
  parent: DiscordRPC.Logging.ILogger
  isExternal: true
  name: Warning(String, Object[])
  nameWithType: ILogger.Warning(String, Object[])
  fullName: DiscordRPC.Logging.ILogger.Warning(System.String, System.Object[])
  nameWithType.vb: ILogger.Warning(String, Object())
  fullName.vb: DiscordRPC.Logging.ILogger.Warning(System.String, System.Object())
  name.vb: Warning(String, Object())
  spec.csharp:
  - uid: DiscordRPC.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: DiscordRPC.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordRPC.Logging.ILogger.Warning(System.String,System.Object[])
    name: Warning
    nameWithType: ILogger.Warning
    fullName: DiscordRPC.Logging.ILogger.Warning
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: DiscordRPC.Logging.ConsoleLogger.Error*
  commentId: Overload:DiscordRPC.Logging.ConsoleLogger.Error
  name: Error
  nameWithType: ConsoleLogger.Error
  fullName: DiscordRPC.Logging.ConsoleLogger.Error
- uid: DiscordRPC.Logging.ILogger.Error(System.String,System.Object[])
  commentId: M:DiscordRPC.Logging.ILogger.Error(System.String,System.Object[])
  parent: DiscordRPC.Logging.ILogger
  isExternal: true
  name: Error(String, Object[])
  nameWithType: ILogger.Error(String, Object[])
  fullName: DiscordRPC.Logging.ILogger.Error(System.String, System.Object[])
  nameWithType.vb: ILogger.Error(String, Object())
  fullName.vb: DiscordRPC.Logging.ILogger.Error(System.String, System.Object())
  name.vb: Error(String, Object())
  spec.csharp:
  - uid: DiscordRPC.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: DiscordRPC.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordRPC.Logging.ILogger.Error(System.String,System.Object[])
    name: Error
    nameWithType: ILogger.Error
    fullName: DiscordRPC.Logging.ILogger.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
